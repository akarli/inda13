import java.util.ArrayList;

/**
 * Manage the stock in a business.
 * The stock is described by zero or more Products.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class StockManager{
    // A list of the products.
    private ArrayList<Product> stock;

    /**
     * Initialise the stock manager.
     */
    public StockManager(){
        stock = new ArrayList<Product>();
    }

    /**
     * Add a product to the list.
     * @param item The item to be added.
     */
    public void addProduct(Product item){
        stock.add(item);
    }
    
    /**
     * Exercise 4.59
     * Receive a delivery of a particular product.
     * Increase the quantity of the product by the given amount.
     * @param id The ID of the product.
     * @param amount The amount to increase the quantity by.
     */
    public void delivery(int id, int amount){
         Product reStock = findProduct(id);
        
        if(reStock ==  null){
            System.out.println("There is no product with that ID.");
        }
        
        else{
            reStock.increaseQuantity(amount);
        }
    }
    
    /**
     * Exercise 4.57
     * Try to find a product in the stock with the given id.
     * @return The identified product, or null if there is none
     *         with a matching ID.
     */
    public Product findProduct(int id){
        Product temp;
        
        for(int i = 0;i < stock.size();i++){
            if(stock.get(i).getID() == id){
                temp = stock.get(i);
                i = stock.size();
                return temp;
            }
        }
        
        return null;
    }
    
    /**
     * Exercise 4.58
     * Locate a product with the given ID, and return how
     * many of this item are in stock. If the ID does not
     * match any product, return zero.
     * @param id The ID of the product.
     * @return The quantity of the given product in stock.
     */
    public int numberInStock(int id){
        Product stockNumber = findProduct(id);
        
        if(stockNumber ==  null){
            System.out.println("There is no product with that ID.");
            return 0;
        }
        
        return stockNumber.getQuantity();
    }

    /**
     * Exercise 4.56
     * Print details of all the products.
     */
    public void printProductDetails(){
        for(int i = 0;i < stock.size();i++){
        
            System.out.println(stock.get(i).toString());
        }
    }
}
